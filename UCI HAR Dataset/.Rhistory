seq_len(3)
seq_along(c('a', 'b', 'c'))
?nchar
formals(cat)
?cat
str(rnorm)
args(rnorm)
lm()
lm
args(lm)
str(lm)
search()
library(ggplot2)
search()
installed.packages()
View(installed.packages())
rnorm(10)
?rnorm
rnorm(10, 1, 1)
mean(rnorm(10, 1, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
?runif
matrix(1:4, 2, 2)
matrix(1:4, 2, 1)
matrix(1:4, 2, 3)
matrix(1:4, 2, 4)
matrix(1:4, 2, 4)[, 4]
matrix(1:4, 2, 4)[1, 4]
g(3, 10)
gl(3, 10)
?gl
gl(3)
gl(3, 1)
?split
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
split(x, gl(3, 10))
library(datasets)
View(airquality)
splitair <- split(airquality, airquality$Month)
splitair
str(splitair)
lapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")])})
sapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")])})
sapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE)})
?interaction
?range
x <- matrix(rnorm(200), 20, 10)
x
View(x)
quantile(x[1,], probs = c(0.25, 0.75))
apply(x, 1, quantile, probs = c(0.25, 0.75))
?array
?sample
View(installed.packages())
library(ggplot2)
qplot
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x^3
y
qplot(x, y)
qplot(y, x)
x <- c(1, 2, 2, 2, 3, 3)
qplot(x, binwidth = 1)
qplot(x)
qplot(x, binwidth = 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x2, binwidth = 1)
??sample
?sample
?range
1:10
testlist <- 1:10
for (i in seq_along(testlist)) {
}
for (i in seq_along(testlist)) {
print(i) }
for (i in seq_len(length(testlist))) {
print(i) }
for (i in seq_len(testlist)) {
print(i) }
q()
setwd('/media/umair/F00E03AB0E0369C4/Dropbox/Study material/Data Science/03_Getting n cleaning data/UCI HAR Dataset')
activity_labels <- read.table('activity_labels.txt')
acts_test <- read.table('test/y_test.txt')
View(acts_test)
acts_test$labels <- activity_labels[acts_test[,1],2]
acts_test <- acts_test$labels
acts_test <- read.table('test/y_test.txt')
acts_test$labels <- activity_labels[acts_test[,1],2]
acts_test <- as.character(acts_test$labels)
subj_test <- read.table('test/subject_test.txt')
?cbind
testset <- read.table('test/X_test.txt')
View(cbind(subj_test, acts_test, testset))
testset <- cbind(subj_test, acts_test, testset)
variable_names <- read.table('features.txt')
variable_names <- rbind('subject', 'activity', variable_names)
variable_names
variable_names <- variable_names[,2]
variable_names <- read.table('features.txt')
variable_names <- as.character(variable_names[,2])
variable_names <- c('subject', 'activity', variable_names)
variable_names
rownames(testset) <- variable_names
colnames(testset) <- variable_names
View(testset)
rm(c(subj_test, acts_test, variable_names))
rm(c('subj_test', 'acts_test', 'variable_names'))
?rm
rm(list = c(subj_test, acts_test, variable_names))
rm(subj_test)
rm(acts_test)
trainset <- read.table('train/X_train.txt')
acts_train <- read.table('train/y_train.txt')
subj_train <- read.table('train/subject_train.txt')
acts_train$labels <- activity_labels[acts_train[,1],2]
View(acts_train)
acts_train <- acts_train[,2]
trainset <- cbind(subj_train, acts_train, trainset)
colnames(trainset) <- variable_names
View(trainset)
mergedset <- rbind(trainset, testset)
View(mergedset)
rm(list=(trainset, testset)
rm(testset)
rm(trainset, subj_train)
rm(acts_train, variable_names, activity_labels)
