?installed.packages
?find.package
?system.file
?require
require(xtable)
require(kaggle)
'kaggle' %in% rownames(installed.packages())
not 'kaggle' %in% rownames(installed.packages())
if ('kaggle') %in% rownames(installed.packages()))==F {print('do it')}
if('kaggle') %in% rownames(installed.packages()))==F {print('do it')}
if ('kaggle' %in% rownames(installed.packages()))==F {print('do it')}
if ('kaggle' %in% rownames(installed.packages())==F) {print('do it')}
source('/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/run_analysis.R')
View(finalset)
?write.table
write.table(finalset, file = "TidyData.txt", row.names = F)
tidyset <- read.table('TidyData.txt')
View(tidyset)
tidyset <- read.table('TidyData.txt', col.names = T)
rm(tidyset)
tidyset <- read.table('TidyData.txt', col.names = T)
finalset
View(finalset)
clear
tidyset <- read.table('TidyData.txt', col.names = T, row.names = F)
tidyset <- read.table('TidyData.txt', col.names = T, row.names = T)
tidyset <- read.table('TidyData.txt', col.names = T, row.names = F)
tidyset <- read.table('TidyData.txt')
View(tidyset)
names(tidyset) <- tidyset[1,]
tidyset[1,]
names(tidyset) <- tidyset[1,]
View(tidyset)
colnames(tidyset) <- tidyset[1,]
View(tidyset)
tidyset <- read.table('TidyData.txt')
tidyset[1,]
tidyset[1,]
write.table(finalset, 'TidyData.txt', row.names = F, col.names = T)
tidyset <- read.table('TidyData.txt')
View(tidyset)
tidyset <- read.table('TidyData.txt', col.names = T)
names(tidyset) <- tidyset[1,]
names(tidyset) <- tidyset[1, ]
names(tidyset) <- tidyset[2, ]
tidyset[2]
tidyset[2,]
tidyset[1,]
colnames(tidyset) <- as.character(tidyset[1, ])
tidyset <- read.table('TidyData.txt', col.names = TRUE)
?write.table
write.table(finalset, 'TidyData.txt', row.names = FALSE, sep = ',')
tidyset <- read.csv('TidyData.txt')
sum(finalset != tidyset)
finalset == tidyset
sum(names(finalset) != names(tidyset))
sum(names(finalset) == names(tidyset))
" " %in% names(finalset)
"." %in% names(finalset)
"_" %in% names(finalset)
names(finalset)
str_detect(names(finalset), "_")
str_detect(names(finalset), " ")
str_detect(names(finalset), "")
write.table(finalset, 'TidyData.txt', row.names = F)
write.table(finalset[1:10,], 'TidyData.txt', row.names = F, )
tidyset <- read.table('TidyData.txt')
View(tidyset)
tidyset <- read.table('TidyData.txt', col.names = T)
write.table(finalset[1:10,], 'TidyData.txt', row.names = F, sep = '\')
)
write.table(finalset, 'TidyData.txt', row.names = F, sep = '/')
tidyset <- read.table('TidyData.txt', col.names = T, sep = '/')
tidyset <- read.table('TidyData.txt', sep = '/')
names(tidyset) <- tidyset[1,]
View(tidyset)
varnames <- read.table('TidyData.txt', sep = '/')
varnames
varnames <- read.table('TidyData.txt', sep = '/', nrows = 1)
View(varnames)
varnames <- as.character(varnames[1,])
varnames <- read.table('TidyData.txt', sep = '/', nrows = 1)
varnames[1,]
varnames <- varnames[1,]
View(varnames)
varnames <- as.character(varnames[1,])
varnames <- as.character(varnames[1,2:])
varnames <- read.table('TidyData.txt', sep = '/', nrows = 1)
varnames <- as.character(varnames[1,2:])
varnames <- as.character(varnames[1,2:68])
varnames <- readLines('TidyData.txt', n = 1)
varnames <- as.vector(varnames)
write.table(finalset, 'TidyData.txt')
tidyset <- read.table('TidyData.txt', col.names = T)
tidyset <- read.table('TidyData.txt')
View(tidyset)
tidyset==finalset
rm(varnames)
rm(list = ls())
source('/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/run_analysis.R')
View(finalset)
rm(list = ls())
source('/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/run_analysis.R')
View(finalset)
?stringr
?`stringr-package`
rm(list = ls())
source('/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/run_analysis.R')
View(finalset)
gsub(names(finalset), pattern = '\()', replacement=''))
varnames <- names(finalset)
varnames
'\'
''
'''
'\''
'()'
gsub(varnames, pattern = '()', replacement = '')
gsub(varnames, pattern = '[()]', replacement = '')
rm(list = ls())
source('run_analysis.R')
View(finalset)
orgvarnames <- read.table('UCI HAR Dataset/features.txt')
View(orgvarnames)
write.table(finalset, 'TidyData.txt', row.names = F)
read.table('TidyData.txt', col.names = T)
read.table('TidyData.txt')
readset <- read.table('TidyData.txt')
View(readset)
names(readset) <- readset[1,]
names(readset) <- read.table('TidyData.txt', nrows = 1)
read.table('TidyData.txt', nrows = 1)
read.table('TidyData.txt', nrows = 1, row.names = F)
read.table('TidyData.txt', nrows = 1, row.names = FALSE)
read.table('TidyData.txt', nrows = 1, row.names = FALSE, col.names = T)
read.table('TidyData.txt', nrows = 1)
readset <- read.table('TidyData.txt', row.names = F)
readset <- read.table('TidyData.txt', col.names = T, row.names = F)
readset <- read.table('TidyData.txt', col.names = F, row.names = F)
readset <- read.table('TidyData.txt' row.names = F)
write.table(finalset, 'TidyData.txt', row.names = F, col.names = T)
readset <- read.table('TidyData.txt')
readset <- read.table('TidyData.txt', col.names = T)
?read.table
readset <- read.table('TidyData.txt')
readset <- read.table('TidyData.txt', skip = 1)
View(readset)
varnames <- read.table('TidyData.txt', nrows = 1)
View(varnames)
varnames[1]
varnames[1,]
View(varnames[1,])
?']'
?"]"
readset <- read.table('TidyData.txt')
View(readset)
filter(readset, 1)
filter(.data = readset, '1')
?filter
filter(.data = readset, subject == '1')
filter(.data = readset, subject == 1)
filter(readset, subject == 1)
filter(readset, V1 = 1)
filter(readset, V1 == 1)
varnames <- scale('UCI HAR Dataset/features.txt')
varnames <- scan('UCI HAR Dataset/features.txt')
readset <- read.table('TidyData.txt', header = T)
View(readset)
write.table(finalset, 'TidyData.txt', row.names = FALSE)
readset <- read.table('TidyData.txt', header = T)
sum(readset == finalset)
sum(readset != finalset)
readset == finalset
rm(orgvarnames)
rm(varnames)
View(readset[readset != finalset, ]
)
is.na(readset)
sum(is.na(readset))
readset[readset != finalset, ]
readset[1:3,]
head(readset) != head(finalset)
head(readset[1,]) != head(finalset[1,])
head(readset[,1]) != head(finalset[,1])
head(readset[,3]) != head(finalset[,3])
readset[(readset[,3]) != (finalset[,3]),3]
head(readset[(readset[,3]) != (finalset[,3]),3])
View(finalset)
head(readset[(readset[,3]) != (finalset[,3]),1:3])
?read.table
write.table(finalset, 'TidyData.txt', row.names = FALSE)
