seq_len(3)
seq_along(c('a', 'b', 'c'))
?nchar
formals(cat)
?cat
str(rnorm)
args(rnorm)
lm()
lm
args(lm)
str(lm)
search()
library(ggplot2)
search()
installed.packages()
View(installed.packages())
rnorm(10)
?rnorm
rnorm(10, 1, 1)
mean(rnorm(10, 1, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
mean(rnorm(10, 1))
?runif
matrix(1:4, 2, 2)
matrix(1:4, 2, 1)
matrix(1:4, 2, 3)
matrix(1:4, 2, 4)
matrix(1:4, 2, 4)[, 4]
matrix(1:4, 2, 4)[1, 4]
g(3, 10)
gl(3, 10)
?gl
gl(3)
gl(3, 1)
?split
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
split(x, gl(3, 10))
library(datasets)
View(airquality)
splitair <- split(airquality, airquality$Month)
splitair
str(splitair)
lapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")])})
sapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")])})
sapply(splitair, function(x) {colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE)})
?interaction
?range
x <- matrix(rnorm(200), 20, 10)
x
View(x)
quantile(x[1,], probs = c(0.25, 0.75))
apply(x, 1, quantile, probs = c(0.25, 0.75))
?array
?sample
View(installed.packages())
library(ggplot2)
qplot
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x^3
y
qplot(x, y)
qplot(y, x)
x <- c(1, 2, 2, 2, 3, 3)
qplot(x, binwidth = 1)
qplot(x)
qplot(x, binwidth = 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x2, binwidth = 1)
??sample
?sample
?range
1:10
testlist <- 1:10
for (i in seq_along(testlist)) {
}
for (i in seq_along(testlist)) {
print(i) }
for (i in seq_len(length(testlist))) {
print(i) }
for (i in seq_len(testlist)) {
print(i) }
q()
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companiesData <- mutate(companiesData, margin = round((profit/margin)*100),1)
library(dplyr)
companiesData <- mutate(companiesData, margin = round((profit/margin)*100),1)
companiesData <- mutate(companiesData, margin = round((profit/margin)*100),1)
?mutate
companiesData <- mutate(companiesData, margin = (profit/margin)*100)
companiesData <- mutate(companiesData, margin = round((profit/revenue)*100, 1))
View(companiesData)
myresults <- companiesData %>% group_by(company) %>% mutate(highestMargin = max(margin), lowestMargin = min(margin))
View(myresults)
highestProfitMargins <- companiesData %>% group_by(company) %>% summarise(bestMargin = max(margin))
View(highestProfitMargins)
library(plyr)
ddply(companiesData, 'company', summarise, bestMargin = max(margin))
ddply(companiesData, 'company', function(x) {x[x$margin==max(x$margin),]})
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companiesData$margin <- companiesData$profit/companiesData$revenue*100
View(companiesData)
companiesData$margin <- round(companiesData$profit/companiesData$revenue*100,1)
View(companiesData)
y <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft","Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companiesData$margin <- round(companiesData$profit/companiesData$revenue*100, 1)
library(plyr)
?ddply
companiesData[order(companiesData$margin),]
?order
companiesData[order(companiesData$margin, decreasing = T),]
library(dplyr)
companiesData %>% group_by(company) %>% arrange(margin)
companiesData %>% group_by(company) %>% arrange(margin, desc)
?arrange
companiesData %>% group_by(company) %>% arrange(desc(margin), .by_group=TRUE)
load("/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/UCI HAR Dataset/.RData")
View(mergedset)
library(tidyr)
library(dplyr)
View(mergedset)
colnames(mergedset)[3]
select(mergedset, tBodyAcc-mean()-X: ,)
select(mergedset, tBodyAcc-mean()-X: )
select(mergedset, 3:563)
colnames(mergedset)[563]
longset1 <- gather(mergedset, tBodyAcc-mean()-X:angle(Z,gravityMean), key = "key", value = "measurement")
longset1 <- gather(mergedset, `tBodyAcc-mean()-X`:`angle(Z,gravityMean)`, key = "key", value = "measurement")
colnames(longset1)
rm(longset1)
load("/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/UCI HAR Dataset/.RData")
library(dplyr)
library(tidyr)
vignette()
vignette(dplyr)
vignette('dplyr')
View(mergedset)
head(select(mergedset, -(subject:activity)))
str(mergedset)
mergedset <- as_tibble(mergedset)
str(mergedset)
mergedset <- data.table::data.table(mergedset)
str(mergedset)
select(mergedset, -(subject:activity))
select(mergedset, subject:activity)
dplyr::select(mergedset, subject:activity)
names(mergedset)[1:3]
select(mergedset, subject:activity)
class(mergedset)
library(ggplot2)
qplot(replicate(10000, sum(sample(1:6, size = 2, replace = T))))
qplot(replicate(10000, sum(sample(1:6, size = 2, replace = T))), binwidth = 1)
replicate(10, sum(sample(1:6, size = 2, replace = T)))
roll <- function() {sum(sample(1:6, size = 2, replace = T))}
roll()
roll()
roll()
roll()
roll()
roll()
roll()
roll()
replicate(10, roll())
replicate(10, roll())
probs <- replicate(10000, roll())
qplot(probs, bindwidth = 1)
qplot(probs, binwidth = 1)
qplot(probs, binwidth = 2)
qplot(probs, binwidth = 1)
x3 <- c(0, 1, 1, 2, 2, 2, 3, 3, 4)
qplot(x3, binwidth = 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x2, binwidth = 1)
replicate(3, 'umair')
replicate(3, 'umair') + replicate(5, 'rafique')
c(replicate(3, 'umair'), replicate(5, 'rafique'))
?rnorm
qplot(c(replicate(4, 'umair'), replicate(2, 'asad'), replicate(5, 'Muhammad'), replicate(2, 'aslam'), replicate(1, 'saba')))
qplot(replicate(sum(sample(1:6, size = 2, replace = TRUE))))
qplot(replicate(10000, sum(sample(1:6, size = 2, replace = TRUE))), binwidth = 1)
??rando,
??Random
?sample
qplot(replicate(10000, sum(sample(1:6, size = 2, replace = TRUE, prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8)))), binwidth = 1)
die <- 1:6
typeof(die)
die <- c(1, 2, 3, 4, 5, 6)
typeof(die)
class(die)
die <- 1:6
class(die)
die <- c(1, 2, 3, 4, 5, 6)
class(die)
typeof(die)
as.integer(die)
class(as.integer(die))
typeof(as.integer(die))
royal_flush <- matrix(c('ace', 'king', 'queen', 'jack', 'ten', 'spade', 'spade', 'spade', 'spade', 'spade'), nrow = 5)
View(royal_flush)
mil <- 1000000
class(mil) <- c('POSIXct', 'POSIXt')
mil
gender <- factor(c("male", "female", "female", "male"))
typeof(gender)
attributes(gender)
unclass(gender)
list1 <- list(100:130, "R", list(TRUE, FALSE))
list1
AceOfHearts <- list('Ace', 'Hearts', 1)
AceOfHearts
typeof(AceOfHearts)
class(AceOfHearts)
13:1
deck <- data.frame(face = c(replicate(4, c('king', 'queen', 'jack', 'ace'))), suit = c(replicate(4, 'spades'), replicate(4, 'diamonds'), replicate(4, 'hearts'), replicate(4, 'clubs')), value = replicate(4, c(4, 3, 2, 1)))
View(deck)
source('/media/umair/F00E03AB0E0369C4/Studies/GitRepos/Getting and Cleaning Data Project/run_analysis.R')
deck <- data.frame(face = c(replicate(4, c('king', 'queen', 'jack', 'ace'))), suit = c(replicate(4, 'spades'), replicate(4, 'diamonds'), replicate(4, 'hearts'), replicate(4, 'clubs')), value = replicate(4, c(4, 3, 2, 1)))
readdata <- read.table('TidyData.txt', header = T)
View(readdata)
